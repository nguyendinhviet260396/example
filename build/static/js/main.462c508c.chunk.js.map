{"version":3,"sources":["assets/images/loading1.gif","containers/App/styles.js","commons/theme/index.js","helpers/toastHelper.js","reducers/task.js","constants/task.js","reducers/ui.js","constants/ui.js","reducers/modal.js","constants/modal.js","reducers/auths.js","constants/auths.js","reducers/index.js","services/axiosService.js","containers/AdminHomePage/styles.js","containers/AdminHomePage/index.js","containers/TaskBoards/styles.js","components/TaskList/styles.js","components/TaskItem/styles.js","components/TaskItem/index.js","components/TaskList/index.js","containers/TaskForm/styles.js","commons/Validation/index.js","actions/modal.js","actions/task.js","components/FormHelper/TextField/index.js","containers/TaskForm/index.js","actions/information.js","apis/infomation.js","actions/products.js","apis/products.js","components/SearchBox/styles.js","components/SearchBox/index.js","containers/TaskBoards/index.js","actions/auths.js","containers/LoginPage/styles.js","containers/LoginPage/index.js","containers/SignUpPage/styles.js","containers/SignUpPage/index.js","constants/index.js","apis/task.js","apis/auth.js","actions/ui.js","sagas/index.js","redux/configureStore.js","components/Globalloading/styles.js","components/Globalloading/index.js","components/Modal/styles.js","components/Modal/index.js","commons/Layout/AdminLayoutRoute/styles.js","components/Dashboard/styles.js","components/Dashboard/Header/styles.js","components/Dashboard/Header/index.js","components/Dashboard/Sidebar/styles.js","components/Dashboard/Sidebar/index.js","components/Dashboard/Footer/styles.js","components/Dashboard/Footer/index.js","components/Dashboard/index.js","commons/Layout/AdminLayoutRoute/index.js","commons/Layout/DefaultLayoutRoute/styles.js","commons/Layout/DefaultLayoutRoute/index.js","containers/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","styles","theme","createMuiTheme","color","primary","secondary","error","textColor","typography","fontFamily","shape","borderRadius","backgroundColor","toastError","message","toast","toastSuccess","success","inittialState","listTask","taskEditing","reducer","state","action","type","data","payload","concat","task","filter","item","id","index","findIndex","newList","slice","initialState","showLoading","showSideBar","uiReducer","showModal","component","title","modalReducer","onButton","listAuths","infAuth","authReducer","rootReducer","combineReducers","taskReducer","ui","modal","form","formReducer","auth","instance","axios","create","interceptors","response","use","this","handleSuccess","handleError","reponse","Promise","reject","url","get","body","post","put","delete","AdminHomePage","Component","withStyles","modalDelete","height","modalConfimText","textAlign","fontSize","box","display","alignItems","flexDirection","marginTop","marginRight","margin","modalConfimTextBold","fontWeight","button","cardActions","justifyContent","itemIcon","TaskItem","props","classes","status","onClickEdit","onClickDelete","description","Box","mt","mb","Card","key","className","card","CardContent","Grid","container","justify","md","Typography","label","CardActions","Button","size","variant","startIcon","onClick","TaskList","tasks","xs","value","ml","lable","wrapperListTask","map","padding","spacing","itemBox","Field","width","itemButton","validate","values","errors","trim","length","email","test","password","match","cPassword","hideModal","changeModalTitle","changeModalContent","fetchListTask","params","fetchListTaskFailed","fetchListTaskSuccess","filterTask","keyword","filterTaskSucces","addTaskFaild","addTask","addTaskSucces","setTaskEditing","setTaskDelete","setTaskDeleteSucces","setTaskDeleteFaild","setTaskUpdate","STATUSES","setTaskUpdateSucces","setTaskUpdateFaild","refeshTask","refeshTaskFailed","refeshTaskSuccess","renderTextField","input","meta","touched","invalid","custom","TextField","placeholder","helperText","TaskForm","handleSubmitForm","taskActionCretors","modalActionCreators","handleSubmit","submitting","initialValues","onSubmit","multiple","name","disabled","withConnect","connect","dispatch","bindActionCreators","modalActions","taskActions","withReduxForm","reduxForm","compose","fetchListInfor","AxiosService","API_ENDPOINT","then","catch","console","log","fetchListProducts","inputSearch","blue","SearchBox","handleChange","noValidate","autoComplete","onChange","TaskBoard","handleEditTask","taskActionCreators","e","loadData","handleFilter","target","openForm","showModalDeleteTask","handleDeleteTask","inforActionsCreators","productsActionsCreators","taskFiltered","taskBoard","renderSearchBox","renderBoard","inforActions","productsActions","authLogin","authLoginSuccess","authLoginFaild","authSignup","authSignupSuccess","authSignupFaild","onButtonSubmit","offButtonSubmit","checkAuthSuccess","checkAuthFaild","background","minHeight","flex","marginBottom","maxWidth","maxHeight","textField","LoginPage","handleCloseForm","history","push","authActionCreators","signup","cardContent","fullWidth","to","authActions","SignUpPage","handleChecked","checked","FormControlLabel","control","Checkbox","STATUS_CODE","ADMIN_ROUTES","path","exact","ROUTES","getList","queryParams","Object","keys","qs","stringify","updateTask","deteleTask","getListUser","addUser","hideLoading","hideSideBar","watchFetchListTaskAction","filterTaskSaga","addTaskSaga","updateSaga","deleteSaga","refeshSaga","loginSaga","signupSaga","rootSaga","take","call","resp","delay","q","reps","select","resp1","fork","takeLatest","takeEvery","composeEnhancers","sagaMiddleware","createSagaMiddleware","configureStore","middlewares","thunk","enhancers","applyMiddleware","store","createStore","run","globalLoading","position","left","right","top","bottom","zIndex","icon","marginLeft","GlobalLoading","xhtml","src","LoadingIcon","alt","uiActions","uiAction","transform","palette","paper","boxShadow","shadows","outline","header","textTransform","cursor","content","CustomModal","open","Modal","itemTitle","dashboard","wrapper","wrapperContent","transition","transitions","easing","sharp","duration","leavingScreen","shiftLeft","easeOut","LeavingSreen","rapperFooter","grow","flexGrow","menuButton","breakpoints","up","search","fade","common","white","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","sectionDesktop","sectionMobile","menuId","Header","handleProfileMenuOpen","setState","mobileMoreAnchorEl","currentTarget","handleMobileMenuOpen","anchorEl","handleMobileMenuClose","handleMenuClose","handleLogout","renderMobileMenu","isMobileMenuOpen","Boolean","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","IconButton","aria-label","aria-controls","aria-haspopup","renderMenu","isMenuOpen","handleToggleSideBar","onToggleSideBar","openSideBar","number","Math","floor","random","AppBar","Toolbar","edge","InputBase","root","inputProps","noWrap","Badge","badgeContent","withRouter","drawerPaper","itemLink","textDecoration","Sidebar","toggleDrawer","list","List","ListItem","menuItem","Drawer","renderList","Footer","paddingTop","itemContent","href","Dashboard","handleToggleSidebar","uiActionCreators","children","classname","AdminLayoutRoute","YourComponent","remainProps","render","routeProps","DefaultLayoutRoute","App","route","ThemeProvider","CssBaseline","renderAdminRoutes","renderDefaultRoutes","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.462c508c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading1.75e4ad33.gif\";","const styles = theme=>({\r\n\r\n});\r\nexport default styles;","import { createMuiTheme} from '@material-ui/core/styles';\r\n\r\nconst theme =createMuiTheme({\r\n    color:{\r\n        primary:'#4caf50',\r\n        secondary:'#81c784',\r\n        error:'#d32f2f',\r\n        textColor:'#f3e5f5'\r\n    },\r\n    typography:{\r\n        fontFamily:'Roboto',\r\n\r\n    },\r\n    shape:{\r\n        borderRadius:6,\r\n        backgroundColor: '#4caf50',\r\n        color:'#a6d4fa'\r\n    }\r\n});\r\nexport default theme;","import { toast } from 'react-toastify';\r\n\r\nexport const toastError = error => {\r\n  let message = null;\r\n  if (typeof error === 'object' && error.message) {\r\n    ({ message } = error);\r\n  }\r\n  if (message !== null && typeof message !== 'undefined' && message !== '') {\r\n    toast.error(message);\r\n  }\r\n};\r\n\r\nexport const toastSuccess = message => {\r\n  if (message !== null && typeof message !== 'undefined' && message !== '') {\r\n    toast.success(message);\r\n  }\r\n};\r\n","import * as types from './../constants/task';\r\nimport { toastError, toastSuccess } from '../helpers/toastHelper';\r\n const inittialState ={\r\n     listTask:[],\r\n     taskEditing:null\r\n };\r\n\r\n\r\n const reducer = (state=inittialState,action)=>{\r\n     switch (action.type) {\r\n        case types.FETCH_TASK:{\r\n             return {\r\n                 ...state,\r\n                 listTask:[],\r\n             };\r\n        }\r\n        case types.FETCH_TASK_SUCCESS: {\r\n             const {data} =action.payload;\r\n             return {\r\n                 ...state,\r\n                 listTask:data,\r\n             };\r\n        }\r\n        case types.FETCH_TASK_FAILED: {\r\n             return {\r\n                 ...state,\r\n                 listTask: [],\r\n             };\r\n        }\r\n        case types.FILTER_TASK_SUCCESS:{\r\n             const {data}=action.payload;\r\n             return {\r\n                 ...state,\r\n                 listTask:data,\r\n             }\r\n        }\r\n        case types.ADD_TASK:{\r\n             return{\r\n                 ...state,\r\n             }\r\n        }\r\n        case types.ADD_TASK_SUCCESS:{\r\n            const {data}=action.payload;\r\n            toastSuccess(' Thêm công việc thành công !');\r\n            return{\r\n                ...state,\r\n                listTask:[data].concat(state.listTask),\r\n            }\r\n        }  \r\n        case types.ADD_TASK_FAILD:{\r\n            const {error}= action.payload;\r\n            toastError(error);\r\n            return{\r\n                ...state,\r\n            }\r\n        }  \r\n        case types.SET_TASK_EDITING:{\r\n            const {task}=action.payload;\r\n            return{\r\n                ...state,\r\n                taskEditing:task,\r\n            }\r\n        }\r\n        case types.SET_TASK_DELETE:{\r\n            return{\r\n                ...state,\r\n            }\r\n        }\r\n            \r\n        case types.SET_TASK_DELETE_SUCCESS:{\r\n            const {data}= action.payload;// data id\r\n            toastSuccess(' Xóa công việc thành công !');\r\n            return{\r\n                ...state,\r\n                listTask:state.listTask.filter(item=>item.id !== data),\r\n            }\r\n        }\r\n        case types.SET_TASK_DELETE_FAILD:{\r\n            const {error}= action.payload;\r\n            toastError(error);\r\n            return{\r\n                ...state,\r\n            }\r\n        }\r\n        case types.SET_TASK_UPDATE:{\r\n            return{\r\n                ...state,\r\n            }\r\n        }  \r\n        case types.SET_TASK_UPDATE_SUCCESS:{// lay task tu listTask sau do cat phan tu do ra va chen data da sua vao\r\n            const {data}= action.payload;\r\n            const listTask = state.listTask;\r\n            toastSuccess(' Cập nhật công việc thành công !')\r\n            const index = listTask.findIndex(item => item.id === data.id);\r\n            if(index !== -1){\r\n                const newList=[\r\n                    ...listTask.slice(0,index),\r\n                    data,\r\n                    ...listTask.slice(index+1)\r\n                ];\r\n                return{\r\n                    ...state,\r\n                    listTask:newList,\r\n                }\r\n            }\r\n            return{\r\n                ...state,   \r\n            }\r\n        }\r\n        case types.SET_TASK_UPDATE_FAILD:{\r\n            const {error}= action.payload;\r\n            toastError(error);\r\n            return{\r\n                ...state,\r\n            }\r\n        }\r\n        case types.REFESH_TASK:{\r\n            return {\r\n                ...state,\r\n                listTask:[],\r\n            };\r\n       }\r\n       case types.REFESH_TASK_SUCCESS: {\r\n            const {data} =action.payload;\r\n            return {\r\n                ...state,\r\n                listTask:data,\r\n            };\r\n       }\r\n       case types.REFESH_TASK_FAILED: {\r\n            return {\r\n                ...state,\r\n                listTask: [],\r\n            };\r\n       } \r\n         default:\r\n             return state;\r\n     }\r\n }\r\n export default reducer;","export const FETCH_TASK ='FETCH_TASK';\r\nexport const FETCH_TASK_SUCCESS = 'FETCH_TASK_SUCCESS';\r\nexport const FETCH_TASK_FAILED = 'FETCH_TASK_FAILED';\r\n\r\n\r\nexport const FILTER_TASK = 'FILTER_TASK';\r\nexport const FILTER_TASK_SUCCESS='FILTER_TASK_SUCCESS';\r\n\r\nexport const ADD_TASK='ADD_TASK';\r\nexport const ADD_TASK_SUCCESS='ADD_TASK_SUCCESS';\r\nexport const ADD_TASK_FAILD='ADD_TASK_FAILD';\r\n\r\n\r\nexport const SET_TASK_EDITING='SET_TASK_EDITING';\r\n\r\nexport const SET_TASK_UPDATE='SET_TASK_UPDATE';\r\nexport const SET_TASK_UPDATE_SUCCESS='SET_TASK_UPDATE_SUCCESS';\r\nexport const SET_TASK_UPDATE_FAILD='SET_TASK_UPDATE_FAILD';\r\n\r\nexport const SET_TASK_DELETE='SET_TASK_DELETE';\r\nexport const SET_TASK_DELETE_SUCCESS='SET_TASK_DELETE_SUCCESS';\r\nexport const SET_TASK_DELETE_FAILD='SET_TASK_DELETE_FAILD';\r\n\r\nexport const REFESH_TASK ='REFESH_TASK';\r\nexport const REFESH_TASK_SUCCESS = 'REFESH_TASK_SUCCESS';\r\nexport const REFESH_TASK_FAILED = 'REFESH_TASK_FAILED';","import * as types from './../constants/ui';\r\n\r\n\r\nconst initialState = {\r\n    showLoading:false,\r\n    showSideBar:true,\r\n}\r\n\r\nconst uiReducer = (state=initialState,action) =>{\r\n    switch(action.type){\r\n        case types.SHOW_LOADING:{\r\n            return{\r\n                ...state,\r\n                showLoading: true,\r\n            }\r\n        }\r\n        case types.HIDE_LOADING:{\r\n            return{\r\n                ...state,\r\n                showLoading:false,\r\n            }\r\n        }\r\n        case types.SHOW_SIDEBAR:{\r\n            return {\r\n                ...state,\r\n                showSideBar:true,\r\n            }\r\n        }\r\n        case types.HIDE_SIDEBAR:{\r\n            return {\r\n                ...state,\r\n                showSideBar:false,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport  default uiReducer;","export const SHOW_LOADING ='GLOBAL_SHOW_LOADING';\r\nexport const HIDE_LOADING='GLOBAL_HIDE_LOADING';\r\n\r\n\r\nexport const SHOW_SIDEBAR ='SHOW_SIDEBAR';\r\nexport const HIDE_SIDEBAR='HIDE_SIDEBAR';","import * as types from './../constants/modal';\r\n\r\n\r\nconst initialState = {\r\n    showModal:false,\r\n    component: null,\r\n    title : '',\r\n}\r\n\r\nconst modalReducer = (state=initialState,action) =>{\r\n    switch(action.type){\r\n        case types.SHOW_MODAL:{\r\n            return{\r\n                ...state,\r\n                showModal: true,\r\n            }\r\n        }\r\n        case types.HIDE_MODAL:{\r\n            return{\r\n                ...state,\r\n                showModal:false,\r\n                title:'',\r\n                component:null,\r\n            }\r\n        }\r\n        case types.CHANGE_MODAL_TITLE:{\r\n            const {title}=action.payload;\r\n            return{\r\n                ...state,\r\n                title,\r\n            }\r\n\r\n        }\r\n        case types.CHANGE_MODAL_CONTENT:{\r\n            const {component}=action.payload;\r\n            return{\r\n                ...state,\r\n                component,\r\n            }\r\n        }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport  default modalReducer;","export const SHOW_MODAL='SHOW_MODAL';\r\nexport const HIDE_MODAL='HIDE_MODAL';\r\nexport const CHANGE_MODAL_TITLE='CHANGE_MODAL_TITLE';\r\nexport const CHANGE_MODAL_CONTENT='CHANGE_MODAL_CONTENT';\r\n","import * as types from './../constants/auths';\r\nimport { toastError, toastSuccess } from '../helpers/toastHelper';\r\n\r\nconst initialState = {\r\n    onButton:true,\r\n    listAuths:[],\r\n    infAuth:'',\r\n}\r\nconst authReducer = (state=initialState,action) =>{\r\n    switch(action.type){\r\n        case types.AUTH_LOGIN:{\r\n            return{\r\n                ...state,\r\n            }\r\n        }\r\n        case types.AUTH_LOGIN_SUCCESS:{\r\n            //const {data}=action.payload;\r\n            toastSuccess(' Đăng nhập thành công !');\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case types.AUTH_LOGIN_FAILD:{\r\n            const {error}=action.payload;\r\n            toastError(error);\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case types.AUTH_SIGNUP:{\r\n            return{\r\n                ...state,\r\n            }\r\n        }\r\n        case types.AUTH_SIGNUP_SUCCESS:{\r\n            const {data}= action.payload;\r\n            toastSuccess(' Thêm tài khoản thành công !');\r\n            return {\r\n                ...state,\r\n                listAuths:[data].concat(state.listAuths),\r\n            }\r\n        }\r\n        case types.AUTH_SIGNUP_FAILD:{\r\n            const {error}=action.payload;\r\n            toastError(error);\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case types.ON_BUTTON_SUBMIT:{\r\n            return{\r\n                ...state,\r\n                onButton:false,\r\n            }\r\n        }\r\n        case types.OFF_BUTTON_SUBMIT:{\r\n            return{\r\n                ...state,\r\n                onButton:true,\r\n            }\r\n        }\r\n        case types.CHECK_AUTH_SUCCESS:{\r\n            return{\r\n                ...state,\r\n                infAuth:'Thành công !'\r\n            }\r\n        }\r\n        case types.CHECK_AUTH_FAILD:{\r\n            return{\r\n                ...state,\r\n                infAuth:'Tài khoản đã tồn tại !'\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport  default authReducer;","export const AUTH_LOGIN =\"AUTH_LOGIN\";\r\nexport const AUTH_LOGIN_SUCCESS =\"AUTH_LOGIN_SUCCESS\";\r\nexport const AUTH_LOGIN_FAILD =\"AUTH_LOGIN_FAILD\";\r\n\r\nexport const AUTH_SIGNUP =\"AUTH_SIGNUP\";\r\nexport const AUTH_SIGNUP_SUCCESS =\"AUTH_SIGNUP_SUCCESS\";\r\nexport const AUTH_SIGNUP_FAILD =\"AUTH_SIGNUP_FAILD\";\r\n\r\n\r\nexport const ON_BUTTON_SUBMIT =\"ON_BUTTON_SUBMIT\";\r\nexport const OFF_BUTTON_SUBMIT =\"OFF_BUTTON_SUBMIT\";\r\n\r\nexport const CHECK_AUTH_SUCCESS =\"CHECK_AUTH_SUCCESS\";\r\nexport const CHECK_AUTH_FAILD =\"CHECK_AUTH_FAILD\";","import {combineReducers} from 'redux';\r\nimport taskReducer from './task';\r\nimport uiReducer from './ui';\r\nimport modalReducer from './modal';\r\nimport authReducer from './auths';\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    task:taskReducer,\r\n    ui:uiReducer,\r\n    modal:modalReducer,\r\n    form: formReducer,\r\n    auth:authReducer\r\n});\r\nexport default rootReducer;","import axios from 'axios';\r\n\r\nclass AxiosService {\r\n    constructor(){\r\n        const instance = axios.create();\r\n        instance.interceptors.response.use(this.handleSuccess,this.handleError);\r\n        this.instance=instance;\r\n    }\r\n    handleSuccess(reponse){\r\n        return reponse;\r\n    }\r\n    handleError(error){\r\n        return Promise.reject(error);\r\n    }\r\n\r\n    get(url){\r\n        return this.instance.get(url);\r\n    }\r\n\r\n    post(url,body){\r\n        return this.instance.post(url,body);\r\n    }\r\n    put(url,body){\r\n        return this.instance.put(url,body);\r\n    }\r\n    delete(url){\r\n        return this.instance.delete(url);\r\n    }\r\n}\r\n\r\nexport default new AxiosService();","const styles=()=>({});\r\nexport default styles;","import React, { Component } from 'react';\r\nimport styles from './styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nclass AdminHomePage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Đây là trang quản trị</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(AdminHomePage);","\r\n\r\nconst styles =(theme)=>({\r\n    modalDelete:{\r\n        height: 100,\r\n    },\r\n    modalConfimText:{\r\n        textAlign: 'center',\r\n        fontSize: 15,\r\n    },\r\n    box:{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'row-reverse',\r\n        marginTop: 20,\r\n        marginRight: 30,\r\n        margin:  15,\r\n    },\r\n    modalConfimTextBold:{\r\n        color:'#FF0000',\r\n        fontWeight: 800,\r\n    },\r\n    button:{\r\n        fontSize: 10,\r\n        marginRight :5,\r\n\r\n\r\n    }\r\n});\r\nexport default styles;","const styles =()=>({\r\n});\r\n\r\nexport default styles;","const styles=()=>({\r\n    cardActions:{\r\n        display:'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button:{\r\n        fontSize: 8,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    itemIcon:{\r\n        display:'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n\r\n    }\r\n});\r\nexport default styles;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TaskItem extends Component {\r\n    render() {\r\n        const{classes,task,status,onClickEdit,onClickDelete}=this.props;\r\n        const{id,description,title}=task;\r\n        return (\r\n            <Box mt={2} mb={2}>\r\n                <Card key={id} className={classes.card}>\r\n                    <CardContent>\r\n                        <Grid container justify='space-between' >\r\n                            <Grid item md={8}>\r\n                                <Typography component=\"h2\">\r\n                                    {title}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item md={4}>\r\n                                {status.label}\r\n                            </Grid>\r\n                        </Grid >\r\n                        <span>\r\n                            {description}\r\n                        </span>\r\n                    </CardContent>\r\n                    <CardActions className={classes.cardActions}>\r\n                        <Button\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            startIcon={<DeleteIcon />}\r\n                            onClick={onClickDelete}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            className={classes.button}\r\n                            startIcon={<EditIcon />}\r\n                            onClick={onClickEdit}\r\n                        > \r\n                            Detail\r\n                        </Button>\r\n                    </CardActions>\r\n                </Card>\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nTaskItem.propTypes={\r\n    classes:PropTypes.object,\r\n    task:PropTypes.object,\r\n    status:PropTypes.object,\r\n    onClickEdit:PropTypes.func,\r\n    onClickDelete:PropTypes.func,\r\n\r\n}\r\n\r\nexport default withStyles(styles)(TaskItem);\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport TaskItem from './../TaskItem/index';\r\nimport PropTypes from 'prop-types';\r\nclass TaskList extends Component {\r\n    render() {\r\n        const {classes,tasks,status,onClickEdit,onClickDelete} = this.props;\r\n        return (\r\n            <Grid item md={4} xs={12} key={status.value}>\r\n                <Box ml={2} mt={2} mb={2}>\r\n                    <div className={classes.status}>{status.lable}</div>\r\n                </Box>\r\n                <div className={classes.wrapperListTask}>\r\n                    {\r\n                        tasks.map((task, index) => {\r\n                            return (\r\n                                <TaskItem\r\n                                key={task.id}\r\n                                status={status}\r\n                                task={task}\r\n                                onClickEdit={()=>onClickEdit(task)}\r\n                                onClickDelete={()=>onClickDelete(task)}\r\n                                /> \r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            </Grid>  \r\n        );\r\n    }\r\n};\r\n\r\nTaskList.propTypes={\r\n    classes:PropTypes.object,\r\n    task:PropTypes.object,\r\n    status:PropTypes.object,\r\n    onClickEdit:PropTypes.func,\r\n    onClickDelete:PropTypes.func,\r\n}\r\nexport default withStyles(styles)(TaskList);\r\n","\r\nconst styles=(theme)=>({\r\n\r\n    form:{\r\n        padding: theme.spacing(2),\r\n        backgroundColor: '#fff',\r\n    },\r\n    itemBox:{\r\n        display: 'flex',\r\n        flexDirection: 'row-reverse',\r\n    },\r\n    Field:{\r\n        width: \"100%\"\r\n    },\r\n    itemButton:{\r\n        margin:5,\r\n    }\r\n});\r\nexport default styles;\r\n\r\n","const validate = values =>{\r\n    let errors = {};\r\n    const {title} = values;\r\n    if (!title){\r\n        errors.title ='vui lòng nhập tiêu đề !'\r\n    } else if (title.trim() && title.length <5){\r\n        errors.title = 'Tiêu đề phải lớn hơn 5 kí tự !'\r\n    }\r\n    if (!values.email) {\r\n        errors.email = 'Vui lòng nhập Email'\r\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Đây không phải Email !'\r\n      }\r\n    if (!values.password){\r\n        errors.password=\"Vui lòng nhập mật khẩu\";\r\n    }else if ((values.password.match(/[a-z]/g) && values.password.match( \r\n        /[A-Z]/g)  && values.password.match( \r\n            /[0-9]/g) && values.password.length > 8)) {\r\n            errors.password=\"\";\r\n    }else{\r\n        errors.password=\"Vui lòng kiểm tra lại mật khẩu\";\r\n    }\r\n    if (!values.cPassword){\r\n        errors.cPassword=\"Vui lòng nhập mật khẩu\";\r\n    }else if (values.cPassword.match(/[a-z]/g) && values.cPassword.match( \r\n        /[A-Z]/g) && values.cPassword.match( \r\n        /[0-9]/g) &&  values.cPassword.length >8 ){\r\n            errors.cPassword=\"\";\r\n    }else{\r\n        errors.cPassword=\"Vui lòng kiểm tra lại mật khẩu\";\r\n    }\r\n    if(values.cPassword !==values.password){\r\n        errors.cPassword=\"Mật khẩu không khớp !\";\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport default validate;","import * as modalTypes from './../constants/modal';\r\n\r\n\r\nexport const showModal =()=>({\r\n    type:modalTypes.SHOW_MODAL,\r\n});\r\n\r\nexport const hideModal = () => ({\r\n    type: modalTypes.HIDE_MODAL,\r\n});\r\nexport const changeModalTitle = (title) => ({\r\n    type: modalTypes.CHANGE_MODAL_TITLE,\r\n    payload:{\r\n        title,\r\n    },\r\n});\r\nexport const changeModalContent = (component) => ({\r\n    type: modalTypes.CHANGE_MODAL_CONTENT,\r\n    payload:{\r\n        component,\r\n    },\r\n});","//import * as taskApis from './../apis/task';\r\nimport * as taskConstants from './../constants/task';\r\nimport { STATUSES } from './../constants';\r\n\r\n/** task Fetch List api */\r\nexport const fetchListTask = (params={}) => {\r\n    return {\r\n        type: taskConstants.FETCH_TASK,\r\n        payload:{\r\n            params,\r\n        }\r\n    };\r\n};\r\nexport const fetchListTaskFailed = error => {\r\n    return {\r\n        type: taskConstants.FETCH_TASK_FAILED,\r\n        payload: {\r\n            error,\r\n        }\r\n    };\r\n};\r\nexport const fetchListTaskSuccess = data => {\r\n    //console.log(data)\r\n    return {\r\n        type: taskConstants.FETCH_TASK_SUCCESS,\r\n        payload: {\r\n            data,\r\n        }\r\n    };\r\n};\r\n\r\n// task filter action***************************************\r\n\r\nexport const filterTask = keyword =>{\r\n    return {\r\n        type: taskConstants.FILTER_TASK,\r\n        payload:{\r\n        keyword,\r\n        }\r\n    }\r\n};\r\n\r\nexport const filterTaskSucces = data=>{\r\n    return{\r\n        type : taskConstants.FILTER_TASK_SUCCESS,\r\n        payload:{\r\n            data,\r\n        }\r\n    }\r\n};\r\n\r\n/**add task to api */\r\n\r\nexport const addTaskFaild = error=>{\r\n    return{\r\n        type : taskConstants.ADD_TASK_FAILD,\r\n        payload:{\r\n            error,\r\n        }\r\n    }\r\n};\r\nexport const addTask =(title,description)=>{\r\n    return{\r\n        type : taskConstants.ADD_TASK,\r\n        payload:{\r\n            title,\r\n            description\r\n        }\r\n    }\r\n};\r\nexport const addTaskSucces = data =>{\r\n    return{\r\n        type : taskConstants.ADD_TASK_SUCCESS,\r\n        payload:{\r\n            data,\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**edit task */\r\nexport const setTaskEditing = task =>{\r\n    return{\r\n        type : taskConstants.SET_TASK_EDITING,\r\n        payload:{\r\n            task,\r\n        }\r\n    }\r\n};\r\n\r\n/**delete task */\r\nexport const setTaskDelete = id =>{\r\n    return{\r\n        type : taskConstants.SET_TASK_DELETE,\r\n        payload:{\r\n            id,\r\n        }\r\n    }\r\n};\r\nexport const setTaskDeleteSucces = data=>{\r\n    return{\r\n        type : taskConstants.SET_TASK_DELETE_SUCCESS,\r\n        payload:{\r\n            data,\r\n        }\r\n    }\r\n};\r\nexport const setTaskDeleteFaild =error=>{\r\n    return{\r\n        type : taskConstants.SET_TASK_DELETE_FAILD,\r\n        payload:{\r\n            error,\r\n        }\r\n    }\r\n};\r\n/** UPDATE  TASK */\r\nexport const setTaskUpdate =(title,description,status = STATUSES[0].value)=>{\r\n    return{\r\n        type : taskConstants.SET_TASK_UPDATE,\r\n        payload:{\r\n            title,\r\n            description,\r\n            status,\r\n        }\r\n    }\r\n};\r\nexport const setTaskUpdateSucces = data =>{\r\n    return{\r\n        type : taskConstants.SET_TASK_UPDATE_SUCCESS,\r\n        payload:{\r\n            data,\r\n        }\r\n    }\r\n};\r\nexport const setTaskUpdateFaild =error=>{\r\n    return{\r\n        type : taskConstants.SET_TASK_UPDATE_FAILD,\r\n        payload:{\r\n            error,\r\n        }\r\n    }\r\n};\r\n/**refesh page */\r\nexport const refeshTask = (params={}) => {\r\n    return {\r\n        type: taskConstants.REFESH_TASK,\r\n        payload:{\r\n            params,\r\n        }\r\n    };\r\n};\r\nexport const refeshTaskFailed = error => {\r\n    return {\r\n        type: taskConstants.REFESH_TASK_FAILED,\r\n        payload: {\r\n            error,\r\n        }\r\n    };\r\n};\r\nexport const refeshTaskSuccess = data => {\r\n    //console.log(data)\r\n    return {\r\n        type: taskConstants.REFESH_TASK_SUCCESS,\r\n        payload: {\r\n            data,\r\n        }\r\n    };\r\n};\r\n/**\r\n * b1: fetchListtaskRequest()\r\n * b2: Reset state.task=[]\r\n * b3: dispatch fetchListTaskSuccess(data reponse)\r\n */\r\n// export const fetchListTaskRequest =()=>{\r\n//     return dispatch =>{\r\n//         dispatch(fetchListTask());\r\n//         taskApis\r\n//         .getList()\r\n//         .then(resp =>{\r\n//             const {data}=resp;\r\n//             dispatch(fetchListTaskSuccess(data));\r\n//             //console.log('data:',data);\r\n//         })\r\n//         .catch(error =>{\r\n//             dispatch(fetchListTaskFailed(error));\r\n//             //console.log(error);\r\n//         });\r\n//     };\r\n// };\r\n\r\n","import React from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst renderTextField = ({\r\n  label,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    label={label}\r\n    placeholder={label}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n  />\r\n);\r\n\r\nrenderTextField.propTypes = {\r\n  label: PropTypes.string,\r\n  input: PropTypes.object,\r\n  meta: PropTypes.object,\r\n};\r\n\r\nexport default renderTextField;","import React, { Component } from 'react';\r\nimport { withStyles, Grid, Box } from '@material-ui/core';\r\nimport styles from './styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators,compose} from 'redux';\r\nimport validate from './../../commons/Validation/index';\r\nimport * as modalActions from './../../actions/modal';\r\nimport * as taskActions from './../../actions/task';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport renderTextField from './../../components/FormHelper/TextField/index';\r\n\r\n\r\nclass TaskForm extends Component {\r\n     handleSubmitForm = data => {\r\n        const {taskActionCretors,taskEditing} = this.props;\r\n        const {addTask,setTaskUpdate} = taskActionCretors;\r\n        const {title,description,status}=data;\r\n        if(taskEditing && taskEditing.id){\r\n            setTaskUpdate(title,description,status);\r\n        }else{\r\n            addTask(title,description);\r\n        }\r\n        \r\n    };\r\n    render() { \r\n        const {classes,\r\n            modalActionCreators,\r\n            handleSubmit,\r\n            invalid,\r\n            submitting,\r\n            initialValues,\r\n        }=this.props;\r\n        const {hideModal}=modalActionCreators;\r\n        const taskEditing = initialValues;\r\n        return (\r\n            <form  className={classes.form}  onSubmit={handleSubmit(this.handleSubmitForm)}>\r\n                    <Grid container spacing={2} >\r\n                         <Grid item md={12} >\r\n                             <Field\r\n                                id=\"title\"\r\n                                label=\"Tiêu đề\"\r\n                                className={classes.Field}\r\n                                multiple\r\n                                margin=\"normal\"\r\n                                //placeholder=\"Nhập tên công viêc....\"\r\n                                name=\"title\"\r\n                                component={renderTextField}\r\n                                value={taskEditing ? taskEditing.title :''}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item md={12} >\r\n                            <Field \r\n                                id=\"description\"\r\n                                label=\"mô tả\"\r\n                                multiple\r\n                                className={classes.Field}\r\n                                margin=\"normal\"\r\n                                //placeholder=\"nhập mô tả cho công việc....\"\r\n                                name=\"description\"\r\n                                component={renderTextField}\r\n                                value={taskEditing ? taskEditing.description :''}\r\n                            />\r\n                        </Grid> \r\n                        <Grid item md={12}>\r\n                            <Box className={classes.itemBox} >\r\n                            <Button \r\n                                color=\"secondary\"\r\n                                variant=\"contained\" \r\n                                size=\"small\"\r\n                                onClick={hideModal}\r\n                                className={classes.itemButton}>\r\n                                    cancel\r\n                                </Button>\r\n                                <Button \r\n                                disabled={invalid ||submitting}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                className={classes.itemButton}\r\n                                type=\"submit\">\r\n                                    submit\r\n                                </Button>\r\n                            </Box>\r\n                        </Grid>\r\n                    </Grid>\r\n            </form> \r\n        );\r\n    }\r\n}\r\nTaskForm.propTypes={\r\n    classes:PropTypes.object,\r\n    odalActionCreators:PropTypes.shape({\r\n        hideModal:PropTypes.func,\r\n    }),\r\n    taskActionCretors:PropTypes.shape({\r\n        addTask:PropTypes.func,\r\n    }),\r\n    handleSubmit: PropTypes.func,\r\n    invalid:PropTypes.bool,\r\n    submitting:PropTypes.bool,\r\n    initialValues:PropTypes.object,\r\n};\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        taskEditing:state.task.taskEditing,\r\n        initialValues:state.task.taskEditing,\r\n        \r\n    };\r\n};\r\nconst mapDispatchToProps=(dispatch,props)=>{\r\n    return{\r\n        modalActionCreators:bindActionCreators(modalActions,dispatch),\r\n        taskActionCretors:bindActionCreators(taskActions,dispatch)\r\n    }\r\n};\r\n\r\nconst withConnect = connect(mapStateToProps,mapDispatchToProps);\r\n\r\nconst FORM_NAME =\"TASK_MANAGEMENT\";\r\nconst withReduxForm = reduxForm({\r\n    form: FORM_NAME,\r\n    validate:validate,\r\n});\r\n\r\nexport default compose(\r\n    withStyles(styles),\r\n    withConnect,\r\n    withReduxForm,\r\n)(\r\n    TaskForm,\r\n);\r\n","import * as inforApis from './../apis/infomation';\r\n\r\nexport const fetchListInfor = () => {\r\n    return dispatch => {\r\n        inforApis\r\n            .getList()\r\n            .then(data => {\r\n                //console.log('data:', data);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n}\r\n\r\n","import AxiosService from '../services/axiosService';\r\nimport { API_ENDPOINT } from '../constants/index';\r\n\r\n// api http://localhost:3000/task\r\n\r\nconst url = 'information';\r\nexport const getList = () => {\r\n    return AxiosService.get(`${API_ENDPOINT}/${url}`)\r\n}\r\n","import * as productsApis from './../apis/products';\r\n\r\nexport const fetchListProducts = () => {\r\n    return dispatch => {\r\n        productsApis\r\n            .getList()\r\n            .then(data => {\r\n                //console.log('data:', data);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n}\r\n\r\n","import AxiosService from '../services/axiosService';\r\nimport { API_ENDPOINT } from '../constants/index';\r\n\r\n//https://5ed9beef4378690016c6b2f5.mockapi.io/api/products\r\n\r\nconst url = 'products';\r\nexport const getList = () => {\r\n    return AxiosService.get(`${API_ENDPOINT}/${url}`)\r\n}\r\n","import { blue } from \"@material-ui/core/colors\";\r\n\r\nconst styles=()=>({\r\n    inputSearch:{\r\n        width: '30%',\r\n        color: blue,\r\n        fontSize:20,\r\n    },\r\n    container:{}\r\n});\r\nexport default styles;\r\n    ","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core';\r\nimport styles from './styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchBox extends Component {\r\n    render() {\r\n        const {classes,handleChange} = this.props;\r\n        return (\r\n            <form className={classes.container} noValidate autoComplete=\"off\">\r\n                <TextField\r\n                autoComplete=\"off\"\r\n                label=\"Search\"\r\n                margin=\"normal\"\r\n                className={classes.inputSearch}\r\n                onChange={handleChange}\r\n                placeholder=\"Nhập từ khóa...\"\r\n                />\r\n            </form>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nSearchBox.propTypes={\r\n    classes:PropTypes.object,\r\n    handleChange:PropTypes.func,\r\n}\r\n\r\nexport default withStyles(styles)(SearchBox);","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Addicon from'@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { STATUSES } from './../../constants';\r\nimport TaskList from './../../components/TaskList/index';\r\nimport TaskForm from './../TaskForm/index';\r\nimport PropTypes from 'prop-types';\r\nimport  {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport * as inforActions from './../../actions/information';\r\nimport * as productsActions from './../../actions/products';\r\nimport * as taskActions from './../../actions/task';\r\nimport SearchBox from './../../components/SearchBox/index';\r\nimport * as modalActions from './../../actions/modal';\r\nimport {Box} from '@material-ui/core';\r\nclass TaskBoard extends Component {\r\n\r\n    componentDidMount(){\r\n        const { taskActionCreators,inforActionsCreators,productsActionsCreators}=this.props;\r\n        const { fetchListTask } = taskActionCreators;\r\n        const { fetchListInfor } = inforActionsCreators;\r\n        const { fetchListProducts } = productsActionsCreators;\r\n        fetchListTask();\r\n        fetchListInfor();\r\n        fetchListProducts();\r\n    };\r\n    handleEditTask=(task)=>{\r\n        const {taskActionCreators,modalActionCreators}=this.props;\r\n        const {setTaskEditing}=taskActionCreators;\r\n        setTaskEditing(task);\r\n        const {showModal,changeModalTitle,changeModalContent}=modalActionCreators;\r\n        showModal();\r\n        changeModalTitle('CẬP NHẬT CÔNG VIỆC !');\r\n        changeModalContent(<TaskForm />);\r\n\r\n    };\r\n    refeshTask=(e)=>{\r\n        console.log(e)\r\n        const {taskActionCreators} = this.props;\r\n        const { refeshTask } = taskActionCreators;\r\n        refeshTask();\r\n\r\n        }\r\n    \r\n    loadData=()=>{\r\n        const{taskActionCreators} = this.props;\r\n        const { fetchListTask } = taskActionCreators;\r\n        fetchListTask();\r\n    }\r\n    \r\n    handleFilter=(e)=>{\r\n        const {value}= e.target;\r\n        const{taskActionCreators} = this.props;\r\n        const { filterTask} = taskActionCreators;\r\n        filterTask(value);\r\n    }\r\n    openForm=()=>{\r\n        const {modalActionCreators,taskActionCreators}=this.props;\r\n        const {setTaskEditing}=taskActionCreators;\r\n        setTaskEditing(null);\r\n        const {showModal,changeModalTitle,changeModalContent}=modalActionCreators;\r\n        showModal();\r\n        changeModalTitle('THÊM MỚI CÔNG VIỆC !');\r\n        changeModalContent(<TaskForm />);\r\n    }\r\n    showModalDeleteTask=(task)=>{\r\n        \r\n        const {modalActionCreators,classes}=this.props;\r\n        const {hideModal,showModal,changeModalTitle,changeModalContent}=modalActionCreators;\r\n        showModal();\r\n        changeModalTitle(' XÓA CÔNG VIỆC!');\r\n        changeModalContent(\r\n                            <div className={classes.modalDelete}>\r\n                                <div className={classes.modalConfimText}>\r\n                                    Bạn chắc chắn muốn xóa {''}\r\n                                    <span className={classes.modalConfimTextBold}>{task.title} ? </span>\r\n                                </div>\r\n                                <Box className={classes.box} mt={2}>\r\n                                    <Box ml={1}>\r\n                                        <Button \r\n                                        variant=\"contained\" \r\n                                        color=\"secondary\" \r\n                                        className={classes.button}\r\n                                        onClick={hideModal}>\r\n                                            Hủy Bỏ\r\n                                        </Button>\r\n                                    </Box>\r\n                                    <Box >\r\n                                        <Button \r\n                                        variant=\"contained\"\r\n                                        color=\"primary\" \r\n                                        className={classes.button}\r\n                                        onClick={()=>this.handleDeleteTask(task)}>\r\n                                            Đồng Ý\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Box>\r\n                            </div>\r\n             );\r\n    }\r\n    handleDeleteTask(task){\r\n        const {id}=task;\r\n        const {taskActionCreators}=this.props;\r\n        const {setTaskDelete} = taskActionCreators;\r\n        setTaskDelete(id);\r\n    }\r\n    renderBoard(){\r\n        const {listTask}= this.props;\r\n        let xhtml = null;\r\n        xhtml= (\r\n            <Grid container spacing={2}>\r\n                {STATUSES.map((status,index)=>{\r\n                    const taskFiltered = listTask.filter(task =>task.status === status.value);\r\n                    return(\r\n                        <TaskList\r\n                        key={index}\r\n                        tasks={taskFiltered}\r\n                        status={status}\r\n                        onClickEdit={this.handleEditTask}\r\n                        onClickDelete={this.showModalDeleteTask}\r\n                       />\r\n                    );\r\n                 })} \r\n            </Grid>  \r\n        );\r\n        return xhtml;\r\n    };\r\n    renderSearchBox(){\r\n        let xhtml =null;\r\n        xhtml=(\r\n            <SearchBox\r\n            handleChange={this.handleFilter}\r\n            />\r\n        );\r\n        return xhtml;\r\n    }\r\n    render() {\r\n        const {classes}=this.props;\r\n        return (\r\n            <div className={classes.taskBoard} id='1'>\r\n                 <input type=\"checkbox\" onClick={this.refeshTask}/>\r\n                 <label > auto refesh</label><br/>\r\n                <Button \r\n                    variant=\"contained\"\r\n                    color=\"primary\" \r\n                    size =\"small\"\r\n                    className={classes.button} \r\n                    onClick={this.loadData}>\r\n                    <Addicon />Loading Data...   \r\n                </Button>\r\n                <Button \r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size =\"small\"\r\n                    className={classes.button}\r\n                    onClick={this.openForm}>\r\n                    <Addicon />Thêm công việc...\r\n                </Button>\r\n                {this.renderSearchBox()}\r\n                {this.renderBoard()}\r\n                {/* {this.refeshTask()} */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nTaskBoard.propTypes={\r\n    classes:PropTypes.object,\r\n    taskActionCreators:PropTypes.shape({\r\n        fetchListTask:PropTypes.func,\r\n        setTaskEditing:PropTypes.func,\r\n        setTaskDelete:PropTypes.func,\r\n        refeshTask:PropTypes.func,\r\n    }),\r\n    inforActionsCreators: PropTypes.shape({\r\n        fetchListInfor: PropTypes.func,\r\n    }),\r\n    productsActionsCreators: PropTypes.shape({\r\n        fetchListProducts: PropTypes.func,\r\n    }),\r\n    modalActionCreators:PropTypes.shape({\r\n        showModal:PropTypes.func,\r\n        hideModal:PropTypes.func,\r\n        changeModalTitle:PropTypes.func,\r\n        changeModalContent:PropTypes.func,\r\n\r\n    }),\r\n    listTask:PropTypes.array,\r\n    filterTask:PropTypes.func,\r\n\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        ...state,\r\n        listTask:state.task.listTask,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps =(dispatch,props)=>{\r\n    return{\r\n        taskActionCreators:bindActionCreators(taskActions,dispatch),\r\n        inforActionsCreators:bindActionCreators(inforActions,dispatch),\r\n        productsActionsCreators: bindActionCreators(productsActions, dispatch),\r\n        modalActionCreators:bindActionCreators(modalActions,dispatch)\r\n    }\r\n}\r\nexport default withStyles(styles)(connect(mapStateToProps,mapDispatchToProps)(TaskBoard));\r\n","import * as authTypes from './../constants/auths';\r\n\r\n\r\nexport const authLogin =(email,password)=>({\r\n    type:authTypes.AUTH_LOGIN,\r\n    payload:{\r\n        email,\r\n        password,\r\n    }\r\n});\r\n\r\nexport const authLoginSuccess = (data) => ({\r\n    type: authTypes.AUTH_LOGIN_SUCCESS,\r\n    payload:{\r\n        data,\r\n    }\r\n});\r\n\r\nexport const authLoginFaild =(error)=>({\r\n    type:authTypes.AUTH_LOGIN_FAILD,\r\n    payload:{\r\n        error,\r\n    }\r\n});\r\n\r\nexport const authSignup = (email,password) => ({\r\n    type: authTypes.AUTH_SIGNUP,\r\n    payload:{\r\n        email,\r\n        password,\r\n    }\r\n});\r\nexport const authSignupSuccess = (data) => ({\r\n    type: authTypes.AUTH_SIGNUP_SUCCESS,\r\n    payload:{\r\n        data,\r\n    }\r\n});\r\n\r\nexport const authSignupFaild = (error) => ({\r\n    type: authTypes.AUTH_SIGNUP_FAILD,\r\n    payload:{\r\n        error,\r\n    }\r\n});\r\n\r\nexport const onButtonSubmit =()=>({\r\n    type:authTypes.ON_BUTTON_SUBMIT,\r\n});\r\nexport const offButtonSubmit =()=>({\r\n    type:authTypes.OFF_BUTTON_SUBMIT,\r\n});\r\nexport const checkAuthSuccess =()=>({\r\n    type:authTypes.CHECK_AUTH_SUCCESS,\r\n});\r\nexport const checkAuthFaild =()=>({\r\n    type:authTypes.CHECK_AUTH_FAILD,\r\n});","\r\nconst styles=(theme)=>({\r\n    background:{\r\n        backgroundColor: theme.color.primary,\r\n        //padding: 30,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        minHeight: '100vh',\r\n        flex:'1 0 auto',\r\n        marginBottom: -200,\r\n    },\r\n    card:{\r\n        width: 'auto',\r\n        maxWidth: 450,\r\n        height:'auto',\r\n        maxHeight: 400,\r\n    },\r\n    typography:{\r\n        fontSize: 25,\r\n    },\r\n    textField:{\r\n    },\r\n    button:{\r\n        margin: 10,\r\n        width: 120,\r\n        height: 35,\r\n    }\r\n});\r\nexport default styles;","\r\nimport React, { Component } from 'react';\r\nimport { withStyles, Card, CardContent, Typography, Button} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {compose,bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport renderTextField from './../../components/FormHelper/TextField/index';\r\nimport validate from './../../commons/Validation/index';\r\nimport * as authActions from './../../actions/auths';\r\nimport styles from './styles';\r\n\r\nclass LoginPage extends Component {\r\n    handleCloseForm=()=>{\r\n        const {history}= this.props;\r\n        history.push('/login');\r\n    }\r\n    handleSubmitForm=(data)=>{\r\n        const {email,password}= data;\r\n        const {authActionCreators}=this.props;\r\n        const {authSignup}=authActionCreators;\r\n        authSignup(email,password);\r\n    }\r\n    render() {\r\n        const {classes,\r\n            handleSubmit,\r\n            invalid,\r\n            //infAuth,\r\n            submitting}=this.props;\r\n        return (\r\n            <div className={classes.background}>\r\n                <div className={classes.signup}>\r\n                    <Card className={classes.card}>\r\n                        <CardContent className={classes.cardContent}>\r\n                            <form onSubmit={handleSubmit(this.handleSubmitForm)}>\r\n                                <div className={classes.label}>\r\n                                    <Typography variant=\"caption\" className={classes.typography}>\r\n                                         Đăng nhập\r\n                                    </Typography><br/>\r\n                                    {/* <span styles=\"fontSize: 10 textAlign:center\">{infAuth}</span> */}\r\n                                </div>\r\n                                <Field\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                className={classes.textField}\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                component={renderTextField}\r\n                                />\r\n                                 <Field\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                className={classes.textField}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                component={renderTextField}\r\n                                />\r\n                                <Button\r\n                                className={classes.button}\r\n                                color = \"primary\"\r\n                                variant=\"contained\"\r\n                                type=\"submit\"\r\n                                disabled={submitting || invalid }\r\n                                >\r\n                                    đăng nhập\r\n                                </Button>\r\n                                <Button\r\n                                className={classes.button}\r\n                                color = \"secondary\"\r\n                                variant=\"contained\"\r\n                                type=\"submit\"\r\n                                onClick={this.handleCloseForm}\r\n                                >\r\n                                     hủy bỏ \r\n                                </Button>\r\n                                <div className=\"pt-1 text-md-center\">\r\n                                    <Link to =\"/signup\">\r\n                                        <Button styles=\"fontSize:15 \">đăng kí tài khoản !</Button>\r\n                                    </Link>\r\n                                </div>\r\n                            </form>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLoginPage.propTypes={\r\n    classes:PropTypes.object,\r\n    handleSubmit:PropTypes.func,\r\n    invalid:PropTypes.bool,\r\n    submitting:PropTypes.bool,\r\n   // history:PropTypes.object,\r\n    authActionCreators:PropTypes.shape({\r\n        onButtonSubmit:PropTypes.func,\r\n        authSignup:PropTypes.func,\r\n        offButtonSubmit:PropTypes.func,\r\n    }),\r\n}\r\n\r\nconst FORM_USER_LOGIN =\"TASK_USER_LOGIN\";\r\nconst withReduxForm = reduxForm({\r\n    form: FORM_USER_LOGIN,\r\n    validate:validate,\r\n});\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        infAuth:state.auth.infAuth,\r\n    }\r\n};\r\nconst mapDispatchToProps=(dispatch,props)=>{\r\n    return{\r\n        authActionCreators:bindActionCreators(authActions,dispatch),\r\n    }\r\n};\r\nconst withConnect=connect(mapStateToProps,mapDispatchToProps);\r\nexport default compose(\r\n    withStyles(styles),\r\n    withConnect,\r\n    withReduxForm,\r\n)(LoginPage);\r\n\r\n","\r\nconst styles=(theme)=>({\r\n    background:{\r\n        backgroundColor: theme.color.primary,\r\n        //padding: 30,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        minHeight: '100vh',\r\n        flex:'1 0 auto',\r\n    },\r\n    card:{\r\n        width: 'auto',\r\n        height: 'auto',\r\n        maxWidth: 500,\r\n    },\r\n    label:{\r\n    },\r\n    typography:{\r\n        fontSize: 25,\r\n    },\r\n    textField:{\r\n    },\r\n    button:{\r\n        margin: 10,\r\n        width: 120,\r\n        height: 35,\r\n    }\r\n});\r\nexport default styles;","\r\nimport React, { Component } from 'react';\r\nimport { withStyles, Card, CardContent, Typography, Button, FormControlLabel, Checkbox} from '@material-ui/core';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {compose,bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport renderTextField from './../../components/FormHelper/TextField/index';\r\nimport validate from './../../commons/Validation/index';\r\nimport * as authActions from './../../actions/auths';\r\nimport styles from './styles';\r\n\r\nclass SignUpPage extends Component {\r\n    handleChecked=(e)=>{\r\n        const {checked}=e.target;\r\n        const {authActionCreators,invalid,submitting}=this.props;\r\n        const {onButtonSubmit,offButtonSubmit}=authActionCreators;\r\n        if(checked && !invalid && !submitting ){\r\n            onButtonSubmit()\r\n        }else{\r\n            offButtonSubmit()\r\n        }\r\n    }\r\n    handleCloseForm=()=>{\r\n        const {authActionCreators}=this.props;\r\n        const {checkAuthFaild}=authActionCreators;\r\n        checkAuthFaild();\r\n        const {history}= this.props;\r\n        history.push('/login');\r\n    }\r\n    handleSubmitForm=(data)=>{\r\n        const {email,password}= data;\r\n        const {authActionCreators}=this.props;\r\n        const {authSignup}=authActionCreators;\r\n        authSignup(email,password);\r\n    }\r\n    render() {\r\n        const {classes,\r\n            handleSubmit,\r\n            invalid,\r\n            onButton,\r\n            infAuth,\r\n            submitting}=this.props;\r\n        return (\r\n            <div className={classes.background}>\r\n                <div className={classes.signup}>\r\n                    <Card className={classes.card}>\r\n                        <CardContent className={classes.cardContent}>\r\n                            <form onSubmit={handleSubmit(this.handleSubmitForm)}>\r\n                                <div className={classes.label}>\r\n                                    <Typography variant=\"caption\" className={classes.typography}>\r\n                                         Đăng kí tài khoản \r\n                                    </Typography><br/>\r\n                                    <span styles=\"fontSize: 10 textAlign:center\">{infAuth}</span>\r\n                                </div>\r\n                                <Field\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                className={classes.textField}\r\n                                type=\"text\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                component={renderTextField}\r\n                                />\r\n                                 <Field\r\n                                id=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                className={classes.textField}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                component={renderTextField}\r\n                                />\r\n                                <Field\r\n                                id=\"cPassWord\"\r\n                                label=\"ConfirmPassword\"\r\n                                type=\"password\"\r\n                                name=\"cPassword\"\r\n                                className={classes.textField}\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                component={renderTextField}\r\n                                />\r\n                                <FormControlLabel\r\n                                control={ <Checkbox value=\"agree\" />}\r\n                                label=\"Tôi đã đọc chính sách và đồng ý với điều khoản !\"\r\n                                onChange={this.handleChecked}\r\n                                className={classes.Checkbox}\r\n                                />\r\n                                <Button\r\n                                className={classes.button}\r\n                                color = \"primary\"\r\n                                variant=\"contained\"\r\n                                type=\"submit\"\r\n                                disabled={onButton||submitting || invalid }\r\n                                >\r\n                                    đăng kí\r\n                                </Button>\r\n                                <Button\r\n                                className={classes.button}\r\n                                color = \"secondary\"\r\n                                variant=\"contained\"\r\n                                type=\"submit\"\r\n                                onClick={this.handleCloseForm}\r\n                                >\r\n                                     quay lại \r\n                                </Button>\r\n                                <div className=\"pt-1 text-md-center\">\r\n                                    <Link to =\"/login\">\r\n                                        <Button onClick={this.handleCloseForm} >có tài khoản, có thể đăng nhập !</Button>\r\n                                    </Link>\r\n                                </div>\r\n                            </form>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSignUpPage.propTypes={\r\n    classes:PropTypes.object,\r\n    handleSubmit:PropTypes.func,\r\n    invalid:PropTypes.bool,\r\n    submitting:PropTypes.bool,\r\n    onButton:PropTypes.bool,\r\n    infauth:PropTypes.string,\r\n    authActionCreators:PropTypes.shape({\r\n        onButtonSubmit:PropTypes.func,\r\n        authSignup:PropTypes.func,\r\n        offButtonSubmit:PropTypes.func,\r\n        \r\n    }),\r\n}\r\n\r\nconst FORM_USER =\"TASK_USER\";\r\nconst withReduxForm = reduxForm({\r\n    form: FORM_USER,\r\n    validate:validate,\r\n});\r\nconst mapStateToProps=state=>{\r\n    console.log(state.auth.infAuth,)\r\n    return{\r\n        onButton:state.auth.onButton,\r\n        infAuth:state.auth.infAuth,\r\n    }\r\n};\r\nconst mapDispatchToProps=(dispatch,props)=>{\r\n    return{\r\n        authActionCreators:bindActionCreators(authActions,dispatch),\r\n    }\r\n};\r\nconst withConnect=connect(mapStateToProps,mapDispatchToProps);\r\nexport default compose(\r\n    withStyles(styles),\r\n    withConnect,\r\n    withReduxForm,\r\n)(SignUpPage);\r\n\r\n\r\n","import AdminHomePage from '../containers/AdminHomePage';\r\nimport TaskBoard from '../containers/TaskBoards';\r\nimport LoginPage from './../containers/LoginPage/index';\r\nimport SignUpPage from './../containers/SignUpPage/index';\r\n\r\n//export const API_ENDPOINT = 'http://localhost:3000';\r\nexport const API_ENDPOINT='https://5ed9beef4378690016c6b2f5.mockapi.io/api';\r\n\r\nexport const STATUSES= [\r\n    {\r\n        value:0,\r\n        lable:'READY'\r\n    },\r\n    {\r\n        value: 1,\r\n        lable: 'INPROGESS'\r\n    },\r\n    {\r\n        value: 2,\r\n        lable: 'COMPLETED'\r\n    }\r\n];\r\n\r\nexport const STATUS_CODE={\r\n    SUCCESS:200,\r\n    CREATED:201,\r\n    UPDATED:202,\r\n    ERROR :404,\r\n}\r\n\r\nexport const ADMIN_ROUTES=[\r\n    {\r\n        path:'/admin',\r\n        name:'Trang quản trị',\r\n        exact:true,\r\n        component:AdminHomePage,\r\n    },\r\n    {\r\n        path:'/admin/task-board',\r\n        name:'Trang quản lý công việc',\r\n        exact:false,\r\n        component:TaskBoard,\r\n\r\n    }\r\n]\r\n\r\nexport const ROUTES =[\r\n    {\r\n        path:'/login',\r\n        exact:false,\r\n        name:'đăng nhập',\r\n        component:LoginPage\r\n        \r\n    },\r\n    {\r\n        path:'/signup',\r\n        exact:false,\r\n        name:'đăng kí',\r\n        component:SignUpPage\r\n        \r\n    }\r\n]","import  AxiosService from './../services/axiosService';\r\nimport {API_ENDPOINT} from './../constants/index';\r\nimport qs from 'query-string';\r\n\r\n// api http://localhost:3000/task/?q:params METHOD : GET\r\n\r\nconst url = 'tasks';\r\nexport const getList =(params={})=>{\r\n    let queryParams='';\r\n    if(Object.keys(params).length >0){\r\n        queryParams=`?${qs.stringify(params)}`;\r\n    }\r\n    return AxiosService.get(`${API_ENDPOINT}/${url}${queryParams}`)\r\n}\r\n\r\n// api http://localhost:3000/task METHOD: POST\r\nexport const addTask=(data)=>{\r\n    return AxiosService.post(`${API_ENDPOINT}/${url}`,data)\r\n}\r\n\r\n// api http://localhost:3000/task/:id METHOD: PUT// truyen vao url va data\r\nexport const updateTask=(data,id)=>{\r\n    return AxiosService.put(`${API_ENDPOINT}/${url}/${id}`,data)\r\n}\r\n\r\n// api http://localhost:3000/task/:id METHOD: DELETE\r\n\r\nexport const deteleTask =(id)=>{\r\n    return AxiosService.delete(`${API_ENDPOINT}/${url}/${id}`)\r\n}","import  AxiosService from './../services/axiosService';\r\nimport {API_ENDPOINT} from './../constants/index';\r\nimport qs from 'query-string';\r\n\r\n// api http://localhost:3000/task/?q:params METHOD : GET\r\n\r\nconst url = 'auths';\r\nexport const getListUser =(params={})=>{\r\n    let queryParams='';\r\n    if(Object.keys(params).length >0){\r\n        queryParams=`?${qs.stringify(params)}`;\r\n    }\r\n    return AxiosService.get(`${API_ENDPOINT}/${url}${queryParams}`)\r\n}\r\n\r\n// api http://localhost:3000/task METHOD: POST\r\nexport const addUser=(data)=>{\r\n    return AxiosService.post(`${API_ENDPOINT}/${url}`,data)\r\n}\r\n\r\n// api http://localhost:3000/task/:id METHOD: PUT// truyen vao url va data\r\nexport const updateUser=(data,id)=>{\r\n    return AxiosService.put(`${API_ENDPOINT}/${url}/${id}`,data)\r\n}\r\n\r\n// api http://localhost:3000/task/:id METHOD: DELETE\r\n\r\nexport const deteleUser =(id)=>{\r\n    return AxiosService.delete(`${API_ENDPOINT}/${url}/${id}`)\r\n}","import * as uiTypes from './../constants/ui';\r\n\r\n\r\nexport const showLoading =()=>({\r\n    type:uiTypes.SHOW_LOADING,\r\n});\r\n\r\nexport const hideLoading = () => ({\r\n    type: uiTypes.HIDE_LOADING,\r\n});\r\n\r\nexport const showSideBar =()=>({\r\n    type:uiTypes.SHOW_SIDEBAR,\r\n});\r\n\r\nexport const hideSideBar = () => ({\r\n    type: uiTypes.HIDE_SIDEBAR,\r\n});","import {fork,take,call,put,delay,takeLatest, takeEvery, select} from 'redux-saga/effects';//select to listTask from store\r\nimport * as taskTypes from './../constants/task';\r\nimport * as authTypes from './../constants/auths';\r\nimport {\r\n    getList,\r\n    addTask,\r\n    deteleTask,     \r\n    updateTask\r\n    } from './../apis/task';\r\n    import {\r\n        getListUser,\r\n        addUser,\r\n        //deteleUser,     \r\n        //updateUser\r\n        } from './../apis/auth';\r\nimport {STATUS_CODE, STATUSES} from './../constants/index';\r\nimport {showLoading,hideLoading} from './../actions/ui';\r\nimport {hideModal} from './../actions/modal';\r\nimport {\r\n    fetchListTaskSuccess,\r\n    fetchListTaskFailed,\r\n    addTaskSucces, \r\n    addTaskFaild, \r\n    fetchListTask,\r\n    setTaskDeleteFaild,\r\n    setTaskDeleteSucces,\r\n    setTaskUpdateSucces,\r\n    setTaskUpdateFaild,\r\n    refeshTaskSuccess,\r\n    refeshTaskFailed\r\n    } from './../actions/task';\r\nimport {\r\n    authSignupSuccess,\r\n    authSignupFaild,\r\n    checkAuthFaild,\r\n    checkAuthSuccess\r\n    } from './../actions/auths';\r\n/**\r\n * B1: dispatch action fetchTask\r\n * B2:Call animationPlayState: \r\n * B3:Kiểm tra status_code\r\n * Nếu thành công thì thực thi ...\r\n * Nếu thất bại thì thực thi gì đó....button-big\r\n * B4:Tắt Loadding\r\n * B5:thực thi công việc tiếp theo...\r\n */\r\nfunction* watchFetchListTaskAction(){\r\n    while (true){\r\n        const action = yield take(taskTypes.FETCH_TASK);// khi FETCH_TASK duoc dispatch thi code tu day tro xuong moi chay\r\n        yield put(showLoading());\r\n        const {params}=action.payload;\r\n        const resp = yield call(getList,params);\r\n        const {status,data}= resp;\r\n        if(status === STATUS_CODE.SUCCESS){\r\n            yield put(fetchListTaskSuccess(data));  \r\n        }else{\r\n            yield put(fetchListTaskFailed(data));\r\n        }\r\n        yield delay(1000);\r\n        yield put(hideLoading());\r\n    } \r\n}\r\n\r\nfunction* filterTaskSaga({payload}){\r\n    yield delay(500);\r\n    const {keyword} = payload;\r\n    /**\r\n     * \r\n     * call api/\r\n     * /const resp= yield call(getList)\r\n    //const {data}=resp;\r\n    //const filteredTask = data.filter(task =>\r\n     */\r\n    yield put(fetchListTask({\r\n        //filter:keyword.charAt(0).toUpperCase() + keyword.slice(1),// mockAPI\r\n        q:keyword, //json-server\r\n        }),\r\n    );\r\n    // const list = yield select (state => state.task.listTask);  \r\n    // const filteredTask = list.filter(task =>\r\n    //     task.title\r\n    //     .trim()\r\n    //     .toLowerCase()\r\n    //     .includes(keyword\r\n    //         .toString()\r\n    //         .trim()\r\n    //         .toLowerCase()),\r\n    //       );\r\n    // yield put(filterTaskSucces(filteredTask));\r\n}\r\nfunction* addTaskSaga({payload}){\r\n    const{title,description}= payload;\r\n    yield put(showLoading());\r\n    const reps = yield call(addTask,\r\n        {\r\n            title:title,\r\n            description:description,\r\n            status: STATUSES[0].value,\r\n        }\r\n        );\r\n    const {data,status}=reps;\r\n    if(status === STATUS_CODE.CREATED){\r\n        yield put(addTaskSucces(data));\r\n        yield put(hideModal());\r\n\r\n    }else {\r\n        yield put(addTaskFaild(data));\r\n\r\n    }\r\n    yield delay(500);\r\n    yield put(hideLoading());\r\n    \r\n}\r\nfunction* updateSaga({payload}){\r\n    const {title,description,status}=payload;\r\n    const taskEditing = yield select(state => state.task.taskEditing);\r\n    yield put(showLoading());\r\n    const reps = yield call(\r\n        updateTask,\r\n        {title,\r\n        description,\r\n        status},\r\n        taskEditing.id,\r\n    );\r\n    const {data,status:statusCode}=reps;\r\n    if(statusCode === STATUS_CODE.SUCCESS){\r\n        yield put(setTaskUpdateSucces(data));\r\n        yield put(hideModal());\r\n    }else{\r\n        yield put(setTaskUpdateFaild(data));\r\n    }\r\n    yield delay(1000);\r\n    yield put(hideLoading());\r\n\r\n}\r\n\r\nfunction* deleteSaga({payload}){\r\n    const {id}= payload;\r\n    yield put(showLoading());\r\n    const reps= yield call(deteleTask,id);\r\n    const {data,status}=reps;\r\n    if(status === STATUS_CODE.SUCCESS){\r\n        yield put(setTaskDeleteSucces(id));\r\n        yield put(hideModal());\r\n    } else {\r\n        yield put(setTaskDeleteFaild(data));\r\n    }\r\n    yield delay(500);\r\n    yield put(hideLoading());\r\n\r\n\r\n}\r\nfunction* refeshSaga({payload}){\r\n    yield put(showLoading());\r\n    const {params}=payload;\r\n    const resp = yield call(getList,params);\r\n    const {status,data}= resp;\r\n    if(status === STATUS_CODE.SUCCESS){\r\n        yield put(refeshTaskSuccess(data));  \r\n    }else{\r\n        yield put(refeshTaskFailed(data));\r\n    }\r\n    yield delay(100);\r\n    yield put(hideLoading());\r\n}\r\nfunction* loginSaga({payload}){\r\n    //const {email,password}= payload;\r\n    //const params = {q:email}\r\n    //const list = yield select (state => state);\r\n   // console.log(list)\r\n    //console.log(state);\r\n    // yield put(showLoading());\r\n    // const resp =yield call(getListUser,params);\r\n    // const{data,status}=resp;\r\n    // if(status === STATUS_CODE.SUCCESS && data.length !== 0){\r\n    //     const resp1 = yield call(addUser,{\r\n    //         email:email,\r\n    //         password:password,\r\n    //     });\r\n    //     const {data,status}= resp1;\r\n    //     if(status === STATUS_CODE.CREATED){\r\n    //         yield put(authSignupSuccess(data));\r\n    //         yield put(checkAuthSuccess());\r\n    //     }else{\r\n    //         yield put(authSignupFaild(data));\r\n    //     }\r\n    // }else{\r\n    //     yield put(checkAuthFaild());\r\n    // }\r\n    yield delay(500);\r\n    yield put(hideLoading());\r\n\r\n}\r\nfunction* signupSaga({payload}){\r\n    const {email,password}= payload;\r\n    const params = {q:email}\r\n    yield put(showLoading());\r\n    const resp =yield call(getListUser,params);\r\n    const{data,status}=resp;\r\n    if(status === STATUS_CODE.SUCCESS && data.length === 0){\r\n        const resp1 = yield call(addUser,{\r\n            email:email,\r\n            password:password,\r\n        });\r\n        const {data,status}= resp1;\r\n        if(status === STATUS_CODE.CREATED){\r\n            yield put(authSignupSuccess(data));\r\n            yield put(checkAuthSuccess());\r\n        }else{\r\n            yield put(authSignupFaild(data));\r\n        }\r\n    }else{\r\n        yield put(checkAuthFaild());\r\n    }\r\n    yield delay(500);\r\n    yield put(hideLoading());\r\n}\r\n\r\nfunction* rootSaga() {\r\n    yield fork(watchFetchListTaskAction);\r\n    yield takeLatest(taskTypes.FILTER_TASK,filterTaskSaga);\r\n    yield takeEvery(taskTypes.ADD_TASK,addTaskSaga);\r\n    yield takeLatest(taskTypes.SET_TASK_DELETE,deleteSaga);\r\n    yield takeLatest(taskTypes.SET_TASK_UPDATE,updateSaga);\r\n    yield takeLatest(taskTypes.REFESH_TASK,refeshSaga);\r\n    yield takeLatest(authTypes.AUTH_LOGIN,loginSaga);\r\n    yield takeLatest(authTypes.AUTH_SIGNUP,signupSaga)\r\n    \r\n}\r\nexport default rootSaga;","import {createStore,compose,applyMiddleware} from 'redux';\r\nimport rootReducer from './../reducers/index';\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport thunk from 'redux-thunk';\r\nimport rootSaga from './../sagas/index';\r\n\r\n\r\n\r\n\r\nconst composeEnhancers = process.env.NODE_ENV !== 'production'&&\r\n    typeof window === 'object' && \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        shouldHotReload: false,\r\n    })\r\n    :compose;\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst configureStore=()=>{\r\n    const middlewares = [thunk, sagaMiddleware];\r\n    const enhancers = [applyMiddleware(...middlewares)];\r\n    const store = createStore(rootReducer,composeEnhancers(...enhancers));\r\n    sagaMiddleware.run(rootSaga)\r\n    return store;\r\n}\r\nexport default configureStore;","\r\nconst styles =()=>({\r\n    globalLoading:{\r\n        position: 'fixed',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        zIndex: 99,\r\n        backgroundColor: 'rgba(0,0,0,0.4)',\r\n    },\r\n    icon:{\r\n        position: 'fixed',\r\n        left: 0,\r\n        right: 0,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        top:'40%',\r\n        width: 80\r\n    }\r\n});\r\nexport default styles;","import React, { Component } from 'react'\r\nimport {withStyles} from '@material-ui/styles';\r\nimport styles from './styles';\r\nimport LoadingIcon from './../../assets/images/loading1.gif';\r\nimport PropTypes from 'prop-types';\r\nimport {bindActionCreators,compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport * as uiAction from './../../actions/ui';\r\n\r\n\r\n class GlobalLoading extends Component {\r\n    render() {\r\n        const {classes,showLoading}= this.props;\r\n        let xhtml = null;\r\n        if (showLoading){\r\n            xhtml = (<div className={classes.globalLoading}>\r\n                         <img\r\n                            src={LoadingIcon}\r\n                            alt=\"loading\"\r\n                            className={classes.icon} />\r\n                    </div>)\r\n        }\r\n        return xhtml;\r\n    }\r\n}\r\nGlobalLoading.propTypes={\r\n    classes:PropTypes.object,\r\n    showLoading:PropTypes.bool,\r\n};\r\n\r\nconst mapStateToprops=(state)=>{\r\n    return {\r\n        showLoading:state.ui.showLoading,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch,props)=>{\r\n    return{\r\n        uiActions:bindActionCreators(uiAction,dispatch),\r\n    }\r\n}\r\nconst withConnect = connect(mapStateToprops,mapDispatchToProps);\r\nexport default compose(\r\n    withStyles(styles),\r\n    withConnect,\r\n)(\r\n    GlobalLoading,\r\n);","\r\nconst styles = theme => ({\r\n    modal: {\r\n      top: '50%',\r\n      left: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      position: 'absolute',\r\n      width: 450,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      // padding: theme.spacing(2, 4, 4),\r\n      outline: 'none',\r\n    },\r\n    header: {\r\n      backgroundColor: theme.color.primary,\r\n      color: theme.color.textColor,\r\n      padding: theme.spacing(2),\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'space-between',\r\n    },\r\n    title: {\r\n      color: theme.color.textColor,\r\n      fontWeight: 700,\r\n      textTransform: 'capitalize',\r\n      margin:10,\r\n    },\r\n    icon: {\r\n      cursor: 'pointer',\r\n      fontSize: 30,\r\n    },\r\n    content: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  });\r\n  \r\n  export default styles;\r\n","import React, { Component } from 'react';\r\nimport styles from './styles';\r\nimport { withStyles} from '@material-ui/core';\r\nimport CloseIcon from'@material-ui/icons/Clear';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {bindActionCreators,compose} from 'redux';\r\nimport * as modalActions from './../../actions/modal';\r\nimport Modal from '@material-ui/core/Modal';\r\nclass CustomModal extends Component {\r\n    render() {\r\n        const{open,classes,component,modalActionCreators,title}= this.props;\r\n        const {hideModal}=modalActionCreators;\r\n        return (\r\n            <Modal open={open}>\r\n                <div className={classes.modal}>\r\n                    <div className={classes.header}>\r\n                        <span className={classes.itemTitle}>{title}</span>\r\n                        <CloseIcon className={classes.itemIcon} onClick={hideModal} />\r\n                    </div>\r\n                    <div classes={classes.content}>\r\n                        {component}\r\n                    </div>\r\n                </div> \r\n            </Modal>\r\n        );\r\n    }\r\n}\r\nCustomModal.propTypes={\r\n    classes:PropTypes.object,\r\n    open:PropTypes.bool,\r\n    component:PropTypes.object,\r\n    title:PropTypes.string,\r\n    modalActionCreators:PropTypes.shape({\r\n        hideModal:PropTypes.func,\r\n    }),\r\n}\r\nconst mapStateToprops = state=>({\r\n    open:state.modal.showModal,\r\n    component: state.modal.component,\r\n    title:state.modal.title,\r\n});\r\nconst mapDispatchToProps=(dispatch,props)=>{\r\n    return{\r\n        modalActionCreators:bindActionCreators(modalActions,dispatch)\r\n    }\r\n}\r\nconst withConnect = connect(mapStateToprops,mapDispatchToProps);\r\nexport default compose(\r\n    withStyles(styles),\r\n    withConnect,\r\n)(\r\n    CustomModal,\r\n);\r\n\r\n","const styles=()=>({});\r\nexport default styles;","\r\nconst styles=(theme)=>({\r\n    dashboard:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    wrapper:{\r\n        display: 'flex',\r\n        flexDirection:'row',\r\n        height: '100%',\r\n        minHeight: '100%'\r\n    },\r\n    wrapperContent:{\r\n        width: '100%',\r\n        padding: 10,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n          }),\r\n    },\r\n    shiftLeft:{\r\n        marginLeft: -240,\r\n        transition:theme.transitions.create('margin',{\r\n            easing:theme.transitions.easing.easeOut,\r\n            duration:theme.transitions.duration.LeavingSreen,\r\n        })\r\n        \r\n    },\r\n    rapperFooter:{\r\n        backgroundColor:'#4169E1',\r\n        color: 'white',\r\n        width:'100%',\r\n        height:'60px', /* Height of the footer */\r\n        position: 'autofill',\r\n        marginBottom: -35,\r\n        }\r\n});\r\nexport default styles;","import { fade } from '@material-ui/core/styles';\r\nconst styles =(theme)=>({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n    },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n    },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n    },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n});\r\n\r\nexport default styles;","import React, { Component } from 'react';\r\nimport styles from './styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport {compose} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter} from 'react-router';\r\nconst menuId = 'primary-search-account-menu';\r\nconst mobileMenuId = 'primary-search-account-menu-mobile';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            mobileMoreAnchorEl:null,\r\n            anchorEl:null,\r\n            number:Math.floor((Math.random() * 10) + 1),\r\n        }\r\n    }\r\n    handleProfileMenuOpen=(e)=>{\r\n        this.setState({\r\n            mobileMoreAnchorEl:e.currentTarget,\r\n        });    \r\n    }\r\n    handleMobileMenuOpen=(e)=>{\r\n        console.log('handleMobileMenuOpen');\r\n        this.setState({\r\n            anchorEl:e.currentTarget,\r\n        }); \r\n    }\r\n    handleMobileMenuClose=()=>{\r\n        console.log('handleMobileMenuClose');\r\n        this.setState({\r\n            mobileMoreAnchorEl:null,\r\n        }); \r\n    }\r\n    handleMenuClose=(e)=>{\r\n        console.log('handleMenuClose');\r\n        this.setState({\r\n            anchorEl:null,\r\n        }); \r\n    }\r\n    handleLogout=()=>{\r\n        console.log(this.props);\r\n        const {history}=this.props;\r\n        if (history){\r\n            history.push('/login');\r\n        }\r\n        \r\n    }\r\n    renderMobileMenu =()=> {\r\n        const {mobileMoreAnchorEl}=this.state;\r\n        const isMobileMenuOpen=Boolean(mobileMoreAnchorEl);\r\n        return(\r\n            <Menu\r\n                anchorEl={mobileMoreAnchorEl}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                id={mobileMenuId}\r\n                keepMounted\r\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                open={isMobileMenuOpen}\r\n                onClose={this.handleMobileMenuClose}\r\n                >\r\n                <MenuItem onClick={this.handleProfileMenuOpen}>\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"primary-search-account-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        color=\"inherit\"\r\n                        >\r\n                        <AccountCircle />\r\n                    </IconButton>\r\n                    <p>Profile</p>\r\n                </MenuItem>\r\n                <MenuItem onClick={this.handleLogout} >\r\n                    <IconButton\r\n                        aria-label=\"account of current user\"\r\n                        aria-controls=\"primary-search-account-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        color=\"inherit\"\r\n                        >\r\n                        <AccountCircle />\r\n                    </IconButton>\r\n                    <p>Logout</p>\r\n                </MenuItem>\r\n            </Menu>\r\n        );\r\n    };\r\n    renderMenu =()=>{\r\n        const {anchorEl}=this.state;\r\n        const isMenuOpen= Boolean(anchorEl);\r\n        return (\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                id={menuId}\r\n                keepMounted\r\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                open={isMenuOpen}\r\n                onClose={this.handleMenuClose}\r\n                >\r\n                <MenuItem onClick={this.handleMenuClose}>Profile</MenuItem>\r\n                <MenuItem onClick={this.handleMenuClose}>My account</MenuItem>\r\n            </Menu>\r\n        );\r\n    };\r\n    \r\n    handleToggleSideBar=()=>{\r\n        const {onToggleSideBar,openSideBar} = this.props;\r\n        if (onToggleSideBar){\r\n            onToggleSideBar(!openSideBar);\r\n        }\r\n    }\r\n    render() {\r\n        let {number} =this.state;\r\n        const {classes,name}=this.props;\r\n        return (\r\n            <div className={classes.grow}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            className={classes.menuButton}\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={this.handleToggleSideBar}\r\n                            >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <div className={classes.search}>\r\n                            <div className={classes.searchIcon}>\r\n                                <SearchIcon />\r\n                            </div>\r\n                            <InputBase\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                                }}\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                            />\r\n                        </div>\r\n                        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                            {name}\r\n                        </Typography>\r\n                        <div className={classes.grow} />\r\n                        <div className={classes.sectionDesktop}>\r\n                            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                                <Badge badgeContent={number} color=\"secondary\">\r\n                                    <MailIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                                <Badge badgeContent={number} color=\"secondary\">\r\n                                    <NotificationsIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls={menuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={this.handleProfileMenuOpen}\r\n                                color=\"inherit\"\r\n                                >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                        </div>\r\n                        <div className={classes.sectionMobile}>\r\n                            <IconButton\r\n                                aria-label=\"show more\"\r\n                                aria-controls={mobileMenuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={this.handleMobileMenuOpen}\r\n                                color=\"inherit\"\r\n                                >\r\n                                <MoreIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                    {this.renderMobileMenu()}\r\n                    {this.renderMenu()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeader.propTypes={\r\n    mobileMoreAnchorEl:PropTypes.bool,\r\n    anchorEl:PropTypes.bool,\r\n    name:PropTypes.string,\r\n    classes:PropTypes.object,\r\n}\r\nconst mapStateToProps=null;\r\nconst mapDispatchToProps=null;\r\nconst withConnect=connect(mapDispatchToProps,mapStateToProps);\r\nexport default compose(\r\n    withStyles(styles),\r\n    withConnect,\r\n    withRouter,\r\n)(Header);\r\n","const styles=()=>({\r\n    drawerPaper: {\r\n        width: 240,\r\n        maxWidth: 240,\r\n        zIndex: 1,\r\n        position: 'relative',\r\n        height: '100vh'\r\n    },\r\n    itemLink:{\r\n        textDecoration: 'none',\r\n        color: 'blue'\r\n    }\r\n\r\n\r\n});\r\nexport default styles;","import React, { Component } from 'react';\r\nimport styles from './styles';\r\nimport { withStyles} from '@material-ui/core';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport {ADMIN_ROUTES} from './../../../constants/index';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport PropTypes from 'prop-types'; \r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Sidebar extends Component {\r\n    toggleDrawer=(value)=>{\r\n        const {onToggleSideBar} = this.props;\r\n        if (onToggleSideBar) {\r\n            onToggleSideBar(value);\r\n        }\r\n    };\r\n    renderList(){\r\n        let xhtml = null;\r\n        const {classes}=this.props;\r\n        xhtml = (\r\n            <div className={classes.list}>\r\n                <List component=\"div\">\r\n                    {ADMIN_ROUTES.map(item=>{\r\n                        return(\r\n                            <NavLink to={item.path} exact={item.exact} className={classes.itemLink}  key={item.path}>\r\n                                <ListItem  className={classes.menuItem} button >\r\n                                {item.name}\r\n                                </ListItem>\r\n                            </NavLink>\r\n                        );\r\n                    })}\r\n                </List>\r\n            </div>\r\n        )\r\n        return xhtml;\r\n    }\r\n    render() {\r\n        const {openSideBar}=this.props;\r\n        const {classes}=this.props;\r\n        return (\r\n            <Drawer\r\n                open={openSideBar}\r\n                onClose={()=>this.toggleDrawer(false)}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n                variant=\"persistent\">\r\n                    {this.renderList()}\r\n          </Drawer>\r\n        );\r\n    }\r\n}\r\nSidebar.propTypes={\r\n    classes:PropTypes.object,\r\n}\r\n\r\nexport default withStyles(styles)(Sidebar);","\r\nconst styles=()=>({\r\n    Footer:{\r\n        textAlign: 'center',\r\n        paddingTop: 20,\r\n        height:30,\r\n        \r\n    },\r\n    itemContent:{\r\n        textAlign: 'center',\r\n        color: 'white'\r\n    }\r\n})\r\nexport default styles;","import React, { Component } from 'react';\r\nimport styles from './styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        const {classes} = this.props;\r\n        return (\r\n            <footer className={classes.Footer}>\r\n                <span className={classes.itemContent}>Developed by VietNguyen @</span>\r\n                <span className={classes.itemContent}><a href=\"mailto:vietnguyen940@gmail.com\">vietnguyen940@gmail.com</a></span>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(Footer);","import React, { Component } from 'react';\r\nimport styles from './styles';\r\nimport { withStyles} from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport Sidebar from './Sidebar';\r\nimport { connect } from 'react-redux';\r\nimport {compose, bindActionCreators} from 'redux';\r\nimport * as uiActions from './../../actions/ui';\r\nimport classname from 'classnames';\r\nimport Footer from './Footer/index';\r\nclass Dashboard extends Component {\r\n    handleToggleSidebar=(value)=>{\r\n        const {uiActionCreators} = this.props;\r\n        const {showSideBar,hideSideBar} = uiActionCreators;\r\n         if (value) {\r\n             showSideBar();\r\n         }else{\r\n             hideSideBar();\r\n         }\r\n    }\r\n    render() {\r\n        const {classes,children,name,openSideBar} =this.props;\r\n        return (\r\n            <div className={classes.dashboard}>\r\n                <Header \r\n                name={name}\r\n                openSideBar={openSideBar}\r\n                onToggleSideBar={this.handleToggleSidebar}\r\n                 />\r\n                <div className={classes.wrapper}>\r\n                    <Sidebar \r\n                    openSideBar={openSideBar}\r\n                    onToggleSideBar={this.handleToggleSidebar} />\r\n                    <div \r\n                    className={classname(classes.wrapperContent,\r\n                    {[classes.shiftLeft]:openSideBar===false,})}>\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.rapperFooter}>\r\n                     <Footer/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nDashboard.propTypes={\r\n    children: PropTypes.object,\r\n  classes: PropTypes.object,\r\n  name: PropTypes.string,\r\n  openSidebar: PropTypes.bool,\r\n  uiActionCreators: PropTypes.shape({\r\n    showSideBar: PropTypes.func,\r\n    hideSideBar: PropTypes.func,\r\n  }),\r\n}\r\nconst mapStateToProps=(state) =>{\r\n    return {\r\n        openSideBar: state.ui.showSideBar,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch) =>{\r\n    return {\r\n        uiActionCreators: bindActionCreators(uiActions, dispatch),\r\n    };\r\n}\r\n\r\nconst withConnect = connect(mapStateToProps,mapDispatchToProps);\r\nexport default compose(\r\n    withStyles(styles),\r\n    withConnect,\r\n)(\r\n    Dashboard\r\n);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport styles from './styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {Route} from 'react-router-dom';\r\nimport Dashboard from './../../../components/Dashboard/index';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AdminLayoutRoute extends Component {\r\n    render() {\r\n        const {component:YourComponent,name,...remainProps}=this.props;\r\n        return (\r\n            <Route\r\n                {...remainProps}// cach ngan gon\r\n                // path={route.path}\r\n                // exact={route.exact}\r\n                // component={route.component}\r\n                render={routeProps =>{\r\n                    return(\r\n                        <Dashboard  name={name} >\r\n                            < YourComponent {...routeProps}/>\r\n                        </Dashboard>\r\n                    )\r\n                }}\r\n             />\r\n        );\r\n    }\r\n}\r\nAdminLayoutRoute.propTypes={\r\n    path:PropTypes.string,\r\n    exact:PropTypes.bool,\r\n    component:PropTypes.oneOfType([PropTypes.object,PropTypes.func]),\r\n    name:PropTypes.string,\r\n}\r\n\r\nexport default withStyles(styles)(AdminLayoutRoute);","const styles=()=>({});\r\nexport default styles;","import React, { Component } from 'react';\r\nimport styles from './styles';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {Route} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass DefaultLayoutRoute extends Component {\r\n    render() {\r\n        const {component:YourComponent,name,...remainProps}=this.props;\r\n        return (\r\n            <Route\r\n                {...remainProps}// cach ngan gon\r\n                // path={route.path}\r\n                // exact={route.exact}\r\n                // component={route.component}\r\n                render={routeProps =>{\r\n                    return(\r\n                            < YourComponent {...routeProps}/>\r\n                        )\r\n                }}\r\n             />\r\n        );\r\n    }\r\n}\r\nDefaultLayoutRoute.propTypes={\r\n    path:PropTypes.string,\r\n    exact:PropTypes.bool,\r\n    component:PropTypes.oneOfType([PropTypes.object,PropTypes.func]),\r\n    name:PropTypes.string,\r\n}\r\n\r\nexport default withStyles(styles)(DefaultLayoutRoute);","import React,{Component} from 'react';\r\nimport {withStyles} from '@material-ui/core';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n//import TaskBoard from './../TaskBoards';\r\nimport styles from './styles.js';\r\nimport theme from './../../commons/theme';\r\nimport {ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {Provider} from 'react-redux';\r\nimport configureStore from './../../redux/configureStore';\r\nimport GlobalLoading from './../../components/Globalloading/index';\r\nimport CustomModal from './../../components/Modal/index';\r\nimport {BrowserRouter,Switch} from 'react-router-dom';\r\nimport { ADMIN_ROUTES,ROUTES } from '../../constants/index';\r\nimport AdminLayoutRoute from './../../commons/Layout/AdminLayoutRoute/index';\r\nimport DefaultLayoutRoute from './../../commons/Layout/DefaultLayoutRoute/index';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst store = configureStore();\r\n\r\nclass  App extends Component {\r\n\r\n    renderAdminRoutes(){\r\n        let xhtml = null;\r\n        xhtml = ADMIN_ROUTES.map(route=>{\r\n            return (<AdminLayoutRoute \r\n                    key={route.path}\r\n                    exact={route.exact}\r\n                    component={route.component}\r\n                    path={route.path}\r\n                    name={route.name}\r\n                   />);\r\n        });\r\n        return xhtml;\r\n    }\r\n    renderDefaultRoutes(){\r\n        let xhtml = null;\r\n        xhtml = ROUTES.map(route=>{\r\n            return (<DefaultLayoutRoute \r\n                    key={route.path}\r\n                    exact={route.exact}\r\n                    component={route.component}\r\n                    path={route.path}\r\n                    name={route.name}\r\n                   />);\r\n        });\r\n        return xhtml;\r\n    }\r\n    render(){\r\n        return(\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <ThemeProvider theme={theme}>\r\n                        <CssBaseline>\r\n                            <ToastContainer />\r\n                            <GlobalLoading/>\r\n                            <Switch>\r\n                                {this.renderAdminRoutes()}\r\n                                {this.renderDefaultRoutes()}\r\n                            </Switch>\r\n                            <CustomModal />\r\n                        </CssBaseline>\r\n                    </ThemeProvider>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        );\r\n    }\r\n}\r\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}